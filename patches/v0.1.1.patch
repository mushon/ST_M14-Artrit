diff --git a/package.json b/package.json
index 5fc494a..9c3e9f2 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "speculatron",
-  "version": "0.1.0",
+  "version": "0.1.1",
   "scripts": {
     "ng": "ng",
     "start": "ng serve",
diff --git a/patches/CHANGELOG b/patches/CHANGELOG
index 87a6314..b7a7292 100644
--- a/patches/CHANGELOG
+++ b/patches/CHANGELOG
@@ -1,4 +1,10 @@
 v0.1.0: Add dialog for selecting which authors to show on the timeline
+        Airtable modifications: There are 5 new/updated columns -
+        - NEW: original_author (checkbox)
+        - RENAMED: existing_author_submission (checkbox)
+        - RENAMED: new_author_name (string)
+        - RENAMED: new_author_email (email)
+        - RENAMED: existing_author_email (email)
 
 v0.0.0: Initial release
 
diff --git a/patches/v0.1.0.patch b/patches/v0.1.0.patch
new file mode 100644
index 0000000..dc5d4d4
--- /dev/null
+++ b/patches/v0.1.0.patch
@@ -0,0 +1,767 @@
+diff --git a/README.md b/README.md
+index 95f7f3d..426aaa3 100644
+--- a/README.md
++++ b/README.md
+@@ -14,6 +14,8 @@ This repo is intended for you to fork and modify based on your needs.
+ 
+ It contains a simple configuration file, which, after modifying, can be used to create a new instance of the app. The site is automatically built and deployed using GitHub Pages - all you need to do is connect it with your credentials and you're good to go.
+ 
++If you want to create multiple instances of this repo under the same account, you can use the "Create repo from template" option to 'copy' the repo instead of forking it. In this case, getting upstream updates is more tricky - please consult the [CHANGLELOG](patches/CHANGELOG) file for more information.
++
+ ### Configuration File
+ 
+ The main configuration file is `CONFIGURATION.ts`.
+@@ -53,7 +55,7 @@ Once you have it, add the style and access token to the config file.
+ 
+ For everything to work you might need to enable Actions and Github Pages in your forked repository.
+ 
+-To deploy the site on a custom domain, add a CNAME file to the root of the repository containing the name of your domain. You also need to make some DNS modifications to point your domain to the GitHub Pages domain - please consult with the GitHub documentation for more information.
++To deploy the site on a custom domain, add a CNAME file to the root of the repository containing the name of your domain. You also need to make some DNS modifications to point your domain to the GitHub Pages domain - please consult with the [GitHub documentation](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site) for more information.
+ 
+ ## Development of this project 
+ 
+diff --git a/package.json b/package.json
+index 11286fa..5fc494a 100644
+--- a/package.json
++++ b/package.json
+@@ -1,6 +1,6 @@
+ {
+   "name": "speculatron",
+-  "version": "0.0.0",
++  "version": "0.1.0",
+   "scripts": {
+     "ng": "ng",
+     "start": "ng serve",
+diff --git a/patches/CHANGELOG b/patches/CHANGELOG
+new file mode 100644
+index 0000000..87a6314
+--- /dev/null
++++ b/patches/CHANGELOG
+@@ -0,0 +1,13 @@
++v0.1.0: Add dialog for selecting which authors to show on the timeline
++
++v0.0.0: Initial release
++
++
++If you copied this repository and not forked it (e.g. using the 'Create from template' option), you will have to work a little harder to in order to update your repository. To do that, you should use the provided patch files in this directory.
++
++For example, to upgrade from version v0.0.0 to v0.1.0, download the `v0.1.0.patch` file from the GitHub repository to the root of your repository, 
++and then use the following command:
++
++`git apply v0.1.0.patch`
++
++This command must be run in the *root directory* of your repository.
+diff --git a/projects/speculatron/src/app/app.module.ts b/projects/speculatron/src/app/app.module.ts
+index 63ef2c8..fa4b2d8 100644
+--- a/projects/speculatron/src/app/app.module.ts
++++ b/projects/speculatron/src/app/app.module.ts
+@@ -20,6 +20,8 @@ import { HttpClientModule } from '@angular/common/http';
+ import { AddNewBarComponent } from './add-new-bar/add-new-bar.component';
+ import { FormsModule } from '@angular/forms';
+ import { MapSelectorComponent } from './map-selector/map-selector.component';
++import { LayersBarComponent } from './layers-bar/layers-bar.component';
++import { LayersBarItemComponent } from './layers-bar/layers-bar-item/layers-bar-item.component';
+ 
+ @NgModule({
+   declarations: [
+@@ -38,7 +40,9 @@ import { MapSelectorComponent } from './map-selector/map-selector.component';
+     ContentWikipediaComponent,
+     AudioPlayerComponent,
+     AddNewBarComponent,
+-    MapSelectorComponent
++    LayersBarComponent,
++    MapSelectorComponent,
++    LayersBarItemComponent
+   ],
+   imports: [
+     BrowserModule,
+diff --git a/projects/speculatron/src/app/layers-bar/layers-bar-item/layers-bar-item.component.html b/projects/speculatron/src/app/layers-bar/layers-bar-item/layers-bar-item.component.html
+new file mode 100644
+index 0000000..031996f
+--- /dev/null
++++ b/projects/speculatron/src/app/layers-bar/layers-bar-item/layers-bar-item.component.html
+@@ -0,0 +1,5 @@
++<div class='item' [class.selected]='author.selected'>
++    <div class='checkbox' (click)='toggle()'></div>
++    <div class='name'>{{author.name}}</div>
++    <div class='count'>{{author.count}}</div>
++</div>
+\ No newline at end of file
+diff --git a/projects/speculatron/src/app/layers-bar/layers-bar-item/layers-bar-item.component.less b/projects/speculatron/src/app/layers-bar/layers-bar-item/layers-bar-item.component.less
+new file mode 100644
+index 0000000..1487946
+--- /dev/null
++++ b/projects/speculatron/src/app/layers-bar/layers-bar-item/layers-bar-item.component.less
+@@ -0,0 +1,59 @@
++@import '../../../common.less';
++
++:host {
++    width: 100%;
++    .item {
++        width: 100%;
++        height: 32px;
++        display: flex;
++        flex-flow: row;
++        align-items: center;
++        justify-content: flex-start;
++        gap: 8px;
++
++        padding: 0 8px;
++        padding-right: 12px;
++
++        .font-manrope;
++        font-style: normal;
++        font-weight: 600;
++        font-size: 15px;
++        letter-spacing: 0.01em;
++
++        background: @gray7;;
++        border-radius: 4px;
++
++        .name, .count {
++            color: gray2;
++        }
++
++        .checkbox {
++            width: 16px;
++            height: 16px;
++            background: #FFFFFF;
++            border: 1px solid @gray4;
++            border-radius: 2px;
++            cursor: pointer;
++        }
++
++        .count {
++            font-weight: 400;
++            margin-left: auto;
++        }
++
++        &.selected {
++            background: rgba(252, 13, 28, 0.07);
++            .name, .count {
++                color: @bright-multiply;
++            }
++
++            .checkbox {
++                border: none;
++                background-image: url('../../../assets/img/icon-red-check.svg');
++                background-size: contain;
++                background-repeat: no-repeat;
++                background-position: center;
++            }
++        }
++    }
++}
+\ No newline at end of file
+diff --git a/projects/speculatron/src/app/layers-bar/layers-bar-item/layers-bar-item.component.ts b/projects/speculatron/src/app/layers-bar/layers-bar-item/layers-bar-item.component.ts
+new file mode 100644
+index 0000000..dfd0d10
+--- /dev/null
++++ b/projects/speculatron/src/app/layers-bar/layers-bar-item/layers-bar-item.component.ts
+@@ -0,0 +1,22 @@
++import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';
++
++@Component({
++  selector: 'app-layers-bar-item',
++  templateUrl: './layers-bar-item.component.html',
++  styleUrls: ['./layers-bar-item.component.less']
++})
++export class LayersBarItemComponent implements OnInit {
++
++  @Input() author: any;
++  @Output() changed = new EventEmitter<void>();
++  
++  constructor() { }
++
++  ngOnInit(): void {
++  }
++
++  toggle() {
++    this.author.selected = !this.author.selected;
++    this.changed.emit();
++  }
++}
+diff --git a/projects/speculatron/src/app/layers-bar/layers-bar.component.html b/projects/speculatron/src/app/layers-bar/layers-bar.component.html
+new file mode 100644
+index 0000000..28db33b
+--- /dev/null
++++ b/projects/speculatron/src/app/layers-bar/layers-bar.component.html
+@@ -0,0 +1,22 @@
++<div class='controls'>
++    <div class='control'>
++        <img src='assets/img/button-close.svg' (click)='closeMe()' />
++    </div>
++</div>
++<div class='header'>
++    <h1>Perspective Layers</h1>
++    <h2>This timeline features additional media fragments contributed by speculative tourists like you. Each adds another perspective to the original storyline.</h2>
++</div>
++<p>Original Author(s):</p>
++<div class='items' *ngFor='let author of api.authorsList'>
++    <app-layers-bar-item [author]='author' *ngIf='author.originalAuthor' (changed)='api.updateTimeline()'></app-layers-bar-item>
++</div>    
++<div class='contributors'>
++    <p>Contributors:</p>
++    <div class='items' *ngFor='let author of api.authorsList'>
++        <app-layers-bar-item [author]='author' *ngIf='!author.originalAuthor' (changed)='api.updateTimeline()'></app-layers-bar-item>
++    </div>    
++</div>
++<div class='bottom'>
++    <button (click)='addNew.emit()'>Add a moment</button>
++</div>
+diff --git a/projects/speculatron/src/app/layers-bar/layers-bar.component.less b/projects/speculatron/src/app/layers-bar/layers-bar.component.less
+new file mode 100644
+index 0000000..20cb42c
+--- /dev/null
++++ b/projects/speculatron/src/app/layers-bar/layers-bar.component.less
+@@ -0,0 +1,135 @@
++@import '../../common.less';
++
++:host {
++    width: 100%;
++    height: 100%;
++    display: flex;
++    flex-flow: column;
++    justify-content: flex-start;
++    align-items: stretch;
++    background: white;
++    position: relative;
++    z-index: 2;
++    overflow: hidden;
++
++    .desktop({
++        max-width: 360px;
++        padding: 24px;
++    });
++    .mobile({
++        max-height: 100%;
++        overflow-y: scroll;
++        padding: 10px 24px;
++        .no-scrollbars;
++    });
++    
++    ::ng-deep {
++        a, a:visited, a:hover {
++            color: @accent;
++            font-weight: 500;
++        }    
++    }
++
++    p {
++        .font-manrope;
++        font-weight: 400;
++        font-size: 15px;
++        line-height: 23px;
++        letter-spacing: 0.01em;
++        color: @gray2;
++        margin: 0;
++        margin-bottom: 8px;
++    }
++
++    .controls {
++        flex: 0 0 auto;
++        display: flex;
++        flex-flow: row;
++        justify-content: flex-end;
++        align-items: center;
++        .control {
++            cursor: pointer;
++        }
++    }
++    .header {
++        display: flex;
++        flex-flow: column;
++        align-items: stretch;
++        justify-content: flex-start;
++        gap: 4px;
++        padding-top: 16px;
++
++        h1 {
++            .font-sourcecode;
++            font-style: normal;
++            font-weight: 700;
++            font-size: 18px;
++            line-height: 21px;
++            letter-spacing: 0.02em;
++            text-transform: uppercase;
++            color: @gray1;
++            margin: 0;
++        }
++        h2 {
++            .font-sourcecode;
++            font-style: normal;
++            font-weight: 400;
++            font-size: 15px;
++            line-height: 21px;
++            letter-spacing: -0.01em;
++            color: @gray1;    
++            padding-bottom: 8px;
++            border-bottom: 0.5px solid @gray1;
++            margin-bottom: 16px;
++        }
++    }
++    
++    .items {
++        width: 100%;
++        display: flex;
++        flex-flow: column;
++        align-items: stretch;
++        gap: 8px;
++    }
++
++    .contributors {
++        width: 100%;
++        padding-top: 8px;
++        margin-top: 8px;
++        border-top: 0.5px solid @gray4;
++    }
++
++    .bottom {
++        flex: 0 0 auto;
++        display: flex;
++        flex-flow: column;
++        align-items: center;
++        width: 100%;
++        margin-top: auto;
++    }
++    button {
++        display: flex;
++        flex-direction: row;
++        justify-content: center;
++        align-items: center;
++        gap: 12px;
++        padding: 8px 24px;
++
++        height: 40px;
++        background: @pale;
++
++        border: 1px solid rgba(252, 13, 28, 0.25);
++        border-radius: 24px;
++
++        .font-sourcecode;
++        font-style: normal;
++        font-weight: 400;
++        font-size: 18px;
++        line-height: 21px;
++        letter-spacing: 0.02em;
++        text-transform: uppercase;
++        color: @bright-multiply;
++
++        cursor: pointer;
++    }
++}
+diff --git a/projects/speculatron/src/app/layers-bar/layers-bar.component.ts b/projects/speculatron/src/app/layers-bar/layers-bar.component.ts
+new file mode 100644
+index 0000000..6447d8d
+--- /dev/null
++++ b/projects/speculatron/src/app/layers-bar/layers-bar.component.ts
+@@ -0,0 +1,31 @@
++import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';
++import { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';
++import { AIRTABLE_BASE, AIRTABLE_DETAILS_FORM } from 'CONFIGURATION';
++import { marked } from 'marked';
++import { first, interval, Subscription, switchMap, tap } from 'rxjs';
++import { ApiService } from '../api.service';
++import { MapSelectorService } from '../map-selector.service';
++import { TimelineMapService } from '../timeline-map.service';
++
++@Component({
++  selector: 'app-layers-bar',
++  templateUrl: './layers-bar.component.html',
++  styleUrls: ['./layers-bar.component.less']
++})
++export class LayersBarComponent implements OnInit {
++  
++  @Input() api: TimelineMapService;
++  @Output() close = new EventEmitter();
++  @Output() addNew = new EventEmitter();
++  
++  constructor() { }
++
++  ngOnInit(): void {
++  }
++
++  closeMe() {
++    this.close.emit();
++  }
++}
++
++
+diff --git a/projects/speculatron/src/app/layout/layout.component.html b/projects/speculatron/src/app/layout/layout.component.html
+index a9ea2b1..6a096fd 100644
+--- a/projects/speculatron/src/app/layout/layout.component.html
++++ b/projects/speculatron/src/app/layout/layout.component.html
+@@ -8,6 +8,10 @@
+         <div class='text'>
+             <ng-content select='.header-title'></ng-content>
+         </div>
++        <div class='layers'>
++            <img src='assets/img/icon-layers.svg' (click)='layers.emit(true)'/>
++            <div class='contrib' *ngIf='api.contribCount > 0'>{{api.contribCount}}</div>
++        </div>
+         <img class='addNew' src='assets/img/icon-add-new.svg' (click)='addNew.emit(true)'>
+         <img class='info' src='assets/img/wawb-info-icon.svg' (click)='info.emit(true)'>
+     </div>
+diff --git a/projects/speculatron/src/app/layout/layout.component.less b/projects/speculatron/src/app/layout/layout.component.less
+index d30fada..8431990 100644
+--- a/projects/speculatron/src/app/layout/layout.component.less
++++ b/projects/speculatron/src/app/layout/layout.component.less
+@@ -103,20 +103,47 @@
+                     }
+                 }
+             }
+-            .addNew {
++            .layers {
+                 .desktop({
+                     margin-top: auto;
+                 });
+                 .mobile({
+                     margin-left: auto;
+                 });
++                position: relative;
++                img {
++                    width: 100%;
++                    height: 100%;
++                }
++                .contrib {
++                    width: 16px;
++                    height: 16px;
++                    position: absolute;
++                    top: 0;
++                    right: 0;
++                    border-radius: 8px;
++                    background-color: #CE0031;
++                    color: white;
++                    .font-manrope;
++                    font-weight: 700;
++                    font-size: 10px;
++                    line-height: 14px;
++                    display: flex;
++                    flex-flow: row;
++                    align-items: center;
++                    justify-content: center;
++                }
++            }
++            .addNew, .layers {
++                .desktop({
++                    width: 48px;
++                    height: 48px;
++                });
+             }
+-            .info, .addNew {
++            .info, .addNew, .layers {
+                 cursor: pointer;
+ 
+                 .desktop({
+-                    width: 24px;
+-                    height: 24px;
+                     margin-bottom: 12px;
+                 });
+                 .mobile({
+diff --git a/projects/speculatron/src/app/layout/layout.component.ts b/projects/speculatron/src/app/layout/layout.component.ts
+index b0315b8..13c07f3 100644
+--- a/projects/speculatron/src/app/layout/layout.component.ts
++++ b/projects/speculatron/src/app/layout/layout.component.ts
+@@ -1,4 +1,5 @@
+ import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';
++import { TimelineMapService } from '../timeline-map.service';
+ 
+ @Component({
+   selector: 'app-layout',
+@@ -8,8 +9,10 @@ import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';
+ export class LayoutComponent implements OnInit {
+ 
+   @Input() hideHeader = false;
++  @Input() api: TimelineMapService;
+   @Output() info = new EventEmitter<boolean>();
+   @Output() addNew = new EventEmitter<boolean>();
++  @Output() layers = new EventEmitter<boolean>();
+ 
+ 
+   constructor() { }
+diff --git a/projects/speculatron/src/app/timeline-map.service.ts b/projects/speculatron/src/app/timeline-map.service.ts
+index 94f4d5d..a39f945 100644
+--- a/projects/speculatron/src/app/timeline-map.service.ts
++++ b/projects/speculatron/src/app/timeline-map.service.ts
+@@ -1,5 +1,5 @@
+ import * as dayjs from 'dayjs';
+-import { forkJoin, ReplaySubject } from 'rxjs';
++import { forkJoin, ReplaySubject, timer } from 'rxjs';
+ import { map, switchMap } from 'rxjs/operators';
+ import { ApiService } from './api.service';
+ 
+@@ -19,6 +19,11 @@ export class TimelineMapService {
+   ready = new ReplaySubject<boolean>(1);
+   data = new ReplaySubject<any[]>(1);
+ 
++  authorsMap: any = {};
++  authorsList: any[] = [];
++  timeline: any[] = [];
++  contribCount = 0;
++
+   constructor(
+       private api: ApiService, 
+       private baseId: string,
+@@ -96,6 +101,7 @@ export class TimelineMapService {
+         ]);
+       }),
+       map(([audioTimestamps, content]) => {
++        const authors: any = {};
+         content.forEach((item: any) => {
+           if (item.audio_timestamps) {
+             item.audio_timestamps = item.audio_timestamps.map((x: string) => audioTimestamps[x]);
+@@ -104,27 +110,64 @@ export class TimelineMapService {
+           }
+           item.hasContent = true;
+           item.year = dayjs(item.post_timestamp).year();
++          const authorEmail = item.existing_author_email || item.new_author_email;
++          const authorName = item.new_author_name;
++          const originalAuthor = !!item.original_author;
++          item.author = authorEmail;
++          if (!authors[authorEmail]) {
++            authors[authorEmail] = {
++              email: authorEmail,
++              count: 0,
++            };
++          }
++          authors[authorEmail].count++;
++          if (authorName) {
++            authors[authorEmail].name = authorName;
++          }
++          authors[authorEmail].originalAuthor = authors[authorEmail].originalAuthor || originalAuthor;
++          authors[authorEmail].selected = authors[authorEmail].selected || originalAuthor;
++        });
++        this.authorsMap = authors;
++        this.authorsList = [];
++        Object.values(authors).sort((a: any, b: any) => (a.originalAuthor ? 0 : 1) - (b.originalAuthor ? 0 : 1)).forEach((author: any) => {
++          this.authorsList.push(author);
+         });
+         // console.log('CONTENT', JSON.stringify(content));
+-        return (content as any[]).sort((a, b) => a.year - b.year);
++        return (content as any[]).sort((a, b) => a.post_timestamp - b.post_timestamp);
+       }),
+       map((timeline) => {
+-        const ret = [];
+-        const content: any[] = [];
+-        for (let year = this.YEAR_START; year <= this.YEAR_END; year++) {
+-          if (timeline.length > 0) {
+-            if (timeline[0].year === year) {
+-              ret.push(timeline.shift());
+-              continue;
+-            }
+-          }
+-          ret.push({year, content});
+-        }
++        this.timeline = timeline;
++        this.contribCount = timeline.filter((i: any) => !(this.authorsMap[i.author]?.originalAuthor)).length;
++        const ret = this.updateTimeline(false);
+         this.ready.next(true);
+         this.ready.complete();
+         this.data.next(ret);
+-        this.data.complete();
+       })
+     );
+   }
++
++  updateTimeline(update = true) {
++    console.log('UPDATING TIMELINE...');
++    const ret = [];
++    const content: any[] = [];
++    const timeline = this.timeline.slice();
++    for (let year = this.YEAR_START; year <= this.YEAR_END; year++) {
++      let added = false;
++      while (timeline.length > 0 && timeline[0].year === year) {
++        const item = timeline.shift();
++        const author = this.authorsMap[item.author];
++        if (author?.selected) {
++          ret.push(item);
++          added = true;
++        }
++      }
++      if (!added) {
++        ret.push({year, content});
++      }
++    }
++    if (update) {
++      this.data.next(ret);
++    }
++    return ret;
++  }
+ }
+diff --git a/projects/speculatron/src/app/timeline-map/timeline-map.component.html b/projects/speculatron/src/app/timeline-map/timeline-map.component.html
+index 58eda2b..1738dc0 100644
+--- a/projects/speculatron/src/app/timeline-map/timeline-map.component.html
++++ b/projects/speculatron/src/app/timeline-map/timeline-map.component.html
+@@ -1,4 +1,4 @@
+-<app-layout (info)='info = $event' (addNew)='addNew = $event'>
++<app-layout [api]='api' (info)='info = $event' (addNew)='addNew = $event' (layers)='layers = $event'>
+     <div class='content'>
+         <div class='map'>
+             <div #mapEl></div>
+@@ -19,6 +19,8 @@
+         ></app-infobar>
+         <app-add-new-bar *ngIf='addNew' [class.open]='addNewOpen' [api]='api' (close)='addNew=false'
+         ></app-add-new-bar>
++        <app-layers-bar *ngIf='layers' [class.open]='layersOpen' [api]='api' (close)='layers=false' (addNew)='addNew=true'
++        ></app-layers-bar>
+     </div>
+     <div class='header-title'>
+         <h2>{{subtitle}}</h2>
+diff --git a/projects/speculatron/src/app/timeline-map/timeline-map.component.less b/projects/speculatron/src/app/timeline-map/timeline-map.component.less
+index 2b9327f..6c3f1fa 100644
+--- a/projects/speculatron/src/app/timeline-map/timeline-map.component.less
++++ b/projects/speculatron/src/app/timeline-map/timeline-map.component.less
+@@ -37,7 +37,7 @@
+             z-index: 10;
+         }
+ 
+-        app-infobar, app-add-new-bar {
++        app-infobar, app-add-new-bar, app-layers-bar {
+             .desktop({
+                 top: 0;
+                 margin: 0 4px;
+@@ -66,7 +66,7 @@
+             transition-duration: 500ms;
+             z-index: 20;
+         }
+-        app-add-new-bar {
++        app-add-new-bar, app-layers-bar {
+             min-height: 80vh;
+         }
+     }
+diff --git a/projects/speculatron/src/app/timeline-map/timeline-map.component.ts b/projects/speculatron/src/app/timeline-map/timeline-map.component.ts
+index 9a52523..b37b15f 100644
+--- a/projects/speculatron/src/app/timeline-map/timeline-map.component.ts
++++ b/projects/speculatron/src/app/timeline-map/timeline-map.component.ts
+@@ -28,7 +28,10 @@ export class TimelineMapComponent implements OnInit {
+   @ViewChild('mapEl', {static: true}) mapEl: ElementRef;
+   _info = false;
+   _addNew = false;
++  _layers = false;
+   addNewOpen = false;
++  layersOpen = false;
++
+   activeYear = -1;
+ 
+   constructor(private activatedRoute: ActivatedRoute, private mapSvc: MapService) {
+@@ -38,6 +41,7 @@ export class TimelineMapComponent implements OnInit {
+   set info(value) {
+     console.log('INFO=', value);
+     this._addNew = false;
++    this._layers = false;
+     this._info = value;
+     localStorage.setItem(this.id, 'opened');
+   }
+@@ -45,32 +49,41 @@ export class TimelineMapComponent implements OnInit {
+   get addNew() { return this._addNew; }
+   set addNew(value) {
+     this._info = false;
++    this._layers = false;
+     this._addNew = value;
+     timer(0).subscribe(() => {this.addNewOpen = value;});
+   }
+ 
++  get layers() { return this._layers; }
++  set layers(value) {
++    this._info = false;
++    this._addNew = false;
++    this._layers = value;
++    timer(0).subscribe(() => {this.layersOpen = value;});
++  }
++
+   ngOnInit(): void {
+     this._info = localStorage.getItem(this.id) !== 'opened';
+-    this.api.data.pipe(
+-      switchMap((timeline: any) => {
+-        this.timeline = timeline;
+-        return this.activatedRoute.fragment;
+-      }),
+-      first(),
+-      delay(1000),
+-    ).subscribe((fragment) => {
+-      this.activeYear = this.api.YEAR_CURRENT;
+-      if (fragment ) {
+-        this.activeYear = parseInt(fragment.slice(1));
+-        if (!this.activeYear) {
++    this.api.data.subscribe((timeline: any) => {
++      if (!this.timeline) {
++        this.activatedRoute.fragment.pipe(
++          delay(1000),
++        ).subscribe((fragment) => {
+           this.activeYear = this.api.YEAR_CURRENT;
+-        }
+-      }
+-      fragment = 'Y' + this.activeYear;
+-      const el = document.querySelector(`[data-year=${fragment}]`);
+-      if (el) {
+-        el.scrollIntoView({block: 'center', behavior: 'auto'});
++          if (fragment ) {
++            this.activeYear = parseInt(fragment.slice(1));
++            if (!this.activeYear) {
++              this.activeYear = this.api.YEAR_CURRENT;
++            }
++          }
++          fragment = 'Y' + this.activeYear;
++          const el = document.querySelector(`[data-year=${fragment}]`);
++          if (el) {
++            el.scrollIntoView({block: 'center', behavior: 'auto'});
++          }
++        });
+       }
++      this.timeline = timeline;
+     });
+     this.theMap = new mapboxgl.Map({
+       container: this.mapEl.nativeElement,
+diff --git a/projects/speculatron/src/assets/img/icon-add-new.svg b/projects/speculatron/src/assets/img/icon-add-new.svg
+index c964a83..7105e06 100644
+--- a/projects/speculatron/src/assets/img/icon-add-new.svg
++++ b/projects/speculatron/src/assets/img/icon-add-new.svg
+@@ -1,5 +1,5 @@
+-<svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
+-<path d="M0 16C0 7.16344 7.16344 0 16 0C24.8366 0 32 7.16344 32 16C32 24.8366 24.8366 32 16 32C7.16344 32 0 24.8366 0 16Z" fill="white" fill-opacity="0.5"/>
+-<path fill-rule="evenodd" clip-rule="evenodd" d="M16 8C15.4477 8 15 8.44772 15 9V15H9C8.44772 15 8 15.4477 8 16C8 16.5523 8.44772 17 9 17H15V23C15 23.5523 15.4477 24 16 24C16.5523 24 17 23.5523 17 23V17H23C23.5523 17 24 16.5523 24 16C24 15.4477 23.5523 15 23 15H17V9C17 8.44772 16.5523 8 16 8Z" fill="#828282"/>
+-<path d="M16 31C7.71573 31 1 24.2843 1 16H-1C-1 25.3888 6.61116 33 16 33V31ZM31 16C31 24.2843 24.2843 31 16 31V33C25.3888 33 33 25.3888 33 16H31ZM16 1C24.2843 1 31 7.71573 31 16H33C33 6.61116 25.3888 -1 16 -1V1ZM16 -1C6.61116 -1 -1 6.61116 -1 16H1C1 7.71573 7.71573 1 16 1V-1Z" fill="#E0E0E0"/>
++<svg width="48" height="48" viewBox="-1 -1 50 50" fill="none" xmlns="http://www.w3.org/2000/svg">
++<path d="M0 24C0 10.7452 10.7452 0 24 0C37.2548 0 48 10.7452 48 24C48 37.2548 37.2548 48 24 48C10.7452 48 0 37.2548 0 24Z" fill="#F2F2F2"/>
++<path fill-rule="evenodd" clip-rule="evenodd" d="M24 16C23.4477 16 23 16.4477 23 17V23H17C16.4477 23 16 23.4477 16 24C16 24.5523 16.4477 25 17 25H23V31C23 31.5523 23.4477 32 24 32C24.5523 32 25 31.5523 25 31V25H31C31.5523 25 32 24.5523 32 24C32 23.4477 31.5523 23 31 23H25V17C25 16.4477 24.5523 16 24 16Z" fill="#828282"/>
++<path d="M24 47C11.2975 47 1 36.7025 1 24H-1C-1 37.8071 10.1929 49 24 49V47ZM47 24C47 36.7025 36.7025 47 24 47V49C37.8071 49 49 37.8071 49 24H47ZM24 1C36.7025 1 47 11.2975 47 24H49C49 10.1929 37.8071 -1 24 -1V1ZM24 -1C10.1929 -1 -1 10.1929 -1 24H1C1 11.2975 11.2975 1 24 1V-1Z" fill="#E0E0E0"/>
+ </svg>
+diff --git a/projects/speculatron/src/assets/img/icon-layers.svg b/projects/speculatron/src/assets/img/icon-layers.svg
+new file mode 100644
+index 0000000..5335025
+--- /dev/null
++++ b/projects/speculatron/src/assets/img/icon-layers.svg
+@@ -0,0 +1,7 @@
++<svg width="48" height="48" viewBox="-1 -1 50 50" fill="none" xmlns="http://www.w3.org/2000/svg">
++<path d="M0 24C0 10.7452 10.7452 0 24 0C37.2548 0 48 10.7452 48 24C48 37.2548 37.2548 48 24 48C10.7452 48 0 37.2548 0 24Z" fill="#F2F2F2"/>
++<path d="M33.0014 23.3492C32.9899 23.1632 32.9267 22.9842 32.819 22.8323C32.7112 22.6803 32.5631 22.5615 32.3914 22.4892L30.2414 21.5692L32.5014 20.2692C32.6616 20.177 32.7932 20.0423 32.8815 19.8799C32.9697 19.7175 33.0112 19.5338 33.0014 19.3492C32.9899 19.1632 32.9267 18.9842 32.819 18.8323C32.7112 18.6803 32.5631 18.5615 32.3914 18.4892L24.3914 15.0792C24.268 15.0269 24.1354 15 24.0014 15C23.8674 15 23.7348 15.0269 23.6114 15.0792L15.6114 18.4892C15.4397 18.5615 15.2916 18.6803 15.1839 18.8323C15.0761 18.9842 15.0129 19.1632 15.0014 19.3492C14.9916 19.5338 15.0331 19.7175 15.1214 19.8799C15.2096 20.0423 15.3412 20.177 15.5014 20.2692L17.7614 21.5692L15.6114 22.4892C15.4397 22.5615 15.2916 22.6803 15.1839 22.8323C15.0761 22.9842 15.0129 23.1632 15.0014 23.3492C14.9916 23.5338 15.0331 23.7175 15.1214 23.8799C15.2096 24.0423 15.3412 24.177 15.5014 24.2692L17.7614 25.5692L15.6114 26.4892C15.4397 26.5615 15.2916 26.6803 15.1839 26.8323C15.0761 26.9842 15.0129 27.1632 15.0014 27.3492C14.9916 27.5338 15.0331 27.7175 15.1214 27.8799C15.2096 28.0423 15.3412 28.177 15.5014 28.2692L23.5014 32.8692C23.6534 32.957 23.8259 33.0032 24.0014 33.0032C24.177 33.0032 24.3494 32.957 24.5014 32.8692L32.5014 28.2692C32.6616 28.177 32.7932 28.0423 32.8815 27.8799C32.9697 27.7175 33.0112 27.5338 33.0014 27.3492C32.9899 27.1632 32.9267 26.9842 32.819 26.8323C32.7112 26.6803 32.5631 26.5615 32.3914 26.4892L30.2414 25.5692L32.5014 24.2692C32.6616 24.177 32.7932 24.0423 32.8815 23.8799C32.9697 23.7175 33.0112 23.5338 33.0014 23.3492ZM24.0014 17.0892L29.7614 19.5392L24.0014 22.8492L18.2414 19.5392L24.0014 17.0892ZM23.5014 24.8692C23.6534 24.957 23.8259 25.0032 24.0014 25.0032C24.177 25.0032 24.3494 24.957 24.5014 24.8692L28.0714 22.8692L29.7614 23.5892L24.0014 26.8492L18.2414 23.5392L19.9314 22.8192L23.5014 24.8692ZM29.7614 27.5392L24.0014 30.8492L18.2414 27.5392L19.9314 26.8192L23.5014 28.8692C23.6534 28.957 23.8259 29.0032 24.0014 29.0032C24.177 29.0032 24.3494 28.957 24.5014 28.8692L28.0714 26.8192L29.7614 27.5392Z" fill="#828282"/>
++<!-- <rect x="32" width="16" height="16" rx="8" fill="#CE0031"/> -->
++<!-- <path d="M42.1897 5.94V4.8H37.7747V5.935H40.7547L38.6747 7.715L39.2247 8.665C39.4147 8.56 39.6347 8.495 39.8497 8.495C40.5747 8.495 41.0847 9.04 41.0847 9.75C41.0847 10.455 40.5547 10.99 39.8497 10.995C39.3197 11 38.8247 10.68 38.6597 10.105L37.4947 10.42C37.8047 11.465 38.7747 12.135 39.8547 12.135C41.2047 12.135 42.3097 11.115 42.3097 9.75C42.3097 8.655 41.6697 7.725 40.5647 7.5L42.1897 5.94Z" fill="white"/> -->
++<path d="M24 47C11.2975 47 1 36.7025 1 24H-1C-1 37.8071 10.1929 49 24 49V47ZM47 24C47 36.7025 36.7025 47 24 47V49C37.8071 49 49 37.8071 49 24H47ZM24 1C36.7025 1 47 11.2975 47 24H49C49 10.1929 37.8071 -1 24 -1V1ZM24 -1C10.1929 -1 -1 10.1929 -1 24H1C1 11.2975 11.2975 1 24 1V-1Z" fill="#E0E0E0"/>
++</svg>
+diff --git a/projects/speculatron/src/assets/img/icon-red-check.svg b/projects/speculatron/src/assets/img/icon-red-check.svg
+new file mode 100644
+index 0000000..4349386
+--- /dev/null
++++ b/projects/speculatron/src/assets/img/icon-red-check.svg
+@@ -0,0 +1,4 @@
++<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
++<rect width="16" height="16" rx="2" fill="white"/>
++<path d="M4.375 7.5L7.125 10.5L12.75 4.5" stroke="#CE0031" stroke-width="1.5"/>
++</svg>
+diff --git a/projects/speculatron/src/common.less b/projects/speculatron/src/common.less
+index 7be7f9a..e3bc1c9 100644
+--- a/projects/speculatron/src/common.less
++++ b/projects/speculatron/src/common.less
+@@ -17,8 +17,11 @@
+ 
+ /* colors */
+ @gray1: #333333;
++@gray2: #4F4F4F;
+ @gray3: #828282;
++@gray4: #BDBDBD;
+ @gray5: #E0E0E0;
++@gray7: #FAFAFA;
+ @accent: #00A881;
+ @blue2: #2D9CDB;
+ @bright-multiply: #CE0031;
diff --git a/projects/speculatron/src/app/layers-bar/layers-bar-item/layers-bar-item.component.html b/projects/speculatron/src/app/layers-bar/layers-bar-item/layers-bar-item.component.html
index 031996f..60f5e83 100644
--- a/projects/speculatron/src/app/layers-bar/layers-bar-item/layers-bar-item.component.html
+++ b/projects/speculatron/src/app/layers-bar/layers-bar-item/layers-bar-item.component.html
@@ -1,5 +1,5 @@
-<div class='item' [class.selected]='author.selected'>
-    <div class='checkbox' (click)='toggle()'></div>
+<div class='item' [class.selected]='author.selected' (click)='toggle()'>
+    <div class='checkbox'></div>
     <div class='name'>{{author.name}}</div>
     <div class='count'>{{author.count}}</div>
 </div>
\ No newline at end of file
diff --git a/projects/speculatron/src/app/layers-bar/layers-bar-item/layers-bar-item.component.less b/projects/speculatron/src/app/layers-bar/layers-bar-item/layers-bar-item.component.less
index 1487946..f6cc077 100644
--- a/projects/speculatron/src/app/layers-bar/layers-bar-item/layers-bar-item.component.less
+++ b/projects/speculatron/src/app/layers-bar/layers-bar-item/layers-bar-item.component.less
@@ -22,6 +22,7 @@
 
         background: @gray7;;
         border-radius: 4px;
+        cursor: pointer;
 
         .name, .count {
             color: gray2;
@@ -33,7 +34,6 @@
             background: #FFFFFF;
             border: 1px solid @gray4;
             border-radius: 2px;
-            cursor: pointer;
         }
 
         .count {
diff --git a/projects/speculatron/src/app/layers-bar/layers-bar.component.html b/projects/speculatron/src/app/layers-bar/layers-bar.component.html
index 28db33b..8f1d868 100644
--- a/projects/speculatron/src/app/layers-bar/layers-bar.component.html
+++ b/projects/speculatron/src/app/layers-bar/layers-bar.component.html
@@ -13,8 +13,10 @@
 </div>    
 <div class='contributors'>
     <p>Contributors:</p>
-    <div class='items' *ngFor='let author of api.authorsList'>
-        <app-layers-bar-item [author]='author' *ngIf='!author.originalAuthor' (changed)='api.updateTimeline()'></app-layers-bar-item>
+    <div class='items'>
+        <ng-container *ngFor='let author of api.authorsList'>
+            <app-layers-bar-item [author]='author' *ngIf='!author.originalAuthor' (changed)='api.updateTimeline()'></app-layers-bar-item>
+        </ng-container>
     </div>    
 </div>
 <div class='bottom'>
diff --git a/projects/speculatron/src/app/layers-bar/layers-bar.component.less b/projects/speculatron/src/app/layers-bar/layers-bar.component.less
index 20cb42c..19060a0 100644
--- a/projects/speculatron/src/app/layers-bar/layers-bar.component.less
+++ b/projects/speculatron/src/app/layers-bar/layers-bar.component.less
@@ -106,6 +106,7 @@
         align-items: center;
         width: 100%;
         margin-top: auto;
+        margin-bottom: 24px;
     }
     button {
         display: flex;
diff --git a/projects/speculatron/src/app/timeline-map.service.ts b/projects/speculatron/src/app/timeline-map.service.ts
index a39f945..82865a5 100644
--- a/projects/speculatron/src/app/timeline-map.service.ts
+++ b/projects/speculatron/src/app/timeline-map.service.ts
@@ -137,7 +137,7 @@ export class TimelineMapService {
       }),
       map((timeline) => {
         this.timeline = timeline;
-        this.contribCount = timeline.filter((i: any) => !(this.authorsMap[i.author]?.originalAuthor)).length;
+        this.contribCount = this.authorsList.filter((i: any) => !i.originalAuthor).length;
         const ret = this.updateTimeline(false);
         this.ready.next(true);
         this.ready.complete();
